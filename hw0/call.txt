1.
call	recur

2.
.text code
.data global/static variables

3.
objdump -t map.obj

4
g: global
O: variable
F: function
*UND*: external link

5.
objdump -t recurse.obj

6.
objdump -t recurse.obj

recurse.obj:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*  00000000 recurse.c
00000000 l    d  .text  00000000 .text
00000000 l    d  .data  00000000 .data
00000000 l    d  .bss   00000000 .bss
00000000 l    d  .rodata        00000000 .rodata
00000000 l    d  .text.__x86.get_pc_thunk.ax    00000000 .text.__x86.get_pc_thunk.ax
00000000 l    d  .note.GNU-stack        00000000 .note.GNU-stack
00000000 l    d  .eh_frame      00000000 .eh_frame
00000000 l    d  .comment       00000000 .comment
00000000 l    d  .group 00000000 .group
00000000 g     F .text  00000052 recur
00000000 g     F .text.__x86.get_pc_thunk.ax    00000000 .hidden __x86.get_pc_thunk.ax
00000000         *UND*  00000000 _GLOBAL_OFFSET_TABLE_
00000000         *UND*  00000000 printf
7.
Every symbol gets its own address

8.

9.

